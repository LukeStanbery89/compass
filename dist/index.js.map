{"mappings":"gFAAAA,EAAiBC,KAAKC,MAAM,oD,MCYX,C,UAZjB,SAAmBC,GACf,IAAIC,EAEJ,IACIA,EAAM,IAAIC,IAAIF,E,CAChB,MAAOG,GACL,OAAO,C,CAGX,MAAwB,UAAjBF,EAAIG,UAAyC,WAAjBH,EAAIG,Q,GCPrCC,UACN,MAAMC,EAAYC,QAAQC,EAAAC,KAAUC,EAAAC,MAAe,qBAG7CC,EAaN,WACI,IAAIC,EAAeC,EAAAC,KAAalB,EAAAmB,sBAChC,IAAKH,EAAc,CAEf,GADAI,QAAQC,IAAI,uBACRC,EAAUb,EAAUc,YACpB,MAAMC,MAAM,uEAGZR,EAAeN,QAAQC,EAAAC,KAAUC,EAAAC,MAAeL,EAAUc,aAC1DH,QAAQC,IAAI,iBAAkBL,GAElCC,EAAAQ,MAAczB,EAAAmB,qBAAiCH,E,CAEnD,OAAOA,C,CA1BWU,GAChBC,EAAYZ,EAAca,UAC1BC,EAAad,EAAce,WA2BjCC,OAAAC,QAAiB,C,cAzBjB,SAAuBC,GACnB,MAAMC,EAAcL,EAAWI,GAC/B,IAAKC,EACD,MAAMV,MAAM,6CAEhB,MAAMW,EAAKR,EAAUO,EAAYE,SAASD,GAC1C,MAAO,GAAGD,EAAY3B,cAAc4B,KAAMD,EAAYG,OAAOH,EAAYI,M","sources":["src/config.json","src/utils/string-utils.js","src/index.js"],"sourcesContent":["{\n    \"masterConfigCacheKey\": \"COMPASS_MASTER_CONFIG\"\n}","function isHttpURL(string) {\n    let url;\n\n    try {\n        url = new URL(string);\n    } catch (_) {\n        return false;\n    }\n\n    return url.protocol === \"http:\" || url.protocol === \"https:\";\n}\n\nmodule.exports = {\n    isHttpURL,\n};","const path = require('path');\nconst APP_CONFIG = require('./config.json');\nconst { isHttpURL } = require('./utils/string-utils');\nconst compassrc = require(path.join(process.cwd(), '/.compassrc.json'));\nconst satchel = require('@lukestanbery/satchel');\n\nconst compassconfig = _getCompassConfig();\nconst deviceMap = compassconfig.deviceMap;\nconst serviceMap = compassconfig.serviceMap;\n\nfunction getServiceURL(service) {\n    const serviceData = serviceMap[service];\n    if (!serviceData) {\n        throw Error('COMPASS ERROR: Invalid service identifier');\n    }\n    const ip = deviceMap[serviceData.device]?.ip;\n    return `${serviceData.protocol}://${ip}:${serviceData.port}${serviceData.path}`;\n}\n\nfunction _getCompassConfig() {\n    let masterConfig = satchel.read(APP_CONFIG.masterConfigCacheKey);\n    if (!masterConfig) {\n        console.log('writing to cache...');\n        if (isHttpURL(compassrc.configpath)) {\n            throw Error('COMPASS ERROR: Compass currently only supports locally hosted files');\n            // TODO: return compassrc.configpath;\n        } else {\n            masterConfig = require(path.join(process.cwd(), compassrc.configpath));\n            console.log('masterConfig: ', masterConfig);\n        }\n        satchel.write(APP_CONFIG.masterConfigCacheKey, masterConfig);\n    }\n    return masterConfig;\n}\n\nmodule.exports = {\n    getServiceURL,\n};"],"names":["$ae530d18cbdba485$exports","JSON","parse","string","url","URL","_","protocol","isHttpURL","$6dbc217b010a975b$var$compassrc","require","$6YMy9$path","join","$6YMy9$process","cwd","$6dbc217b010a975b$var$compassconfig","masterConfig","$6YMy9$lukestanberysatchel","read","masterConfigCacheKey","console","log","$6dbc217b010a975b$require$isHttpURL","configpath","Error","write","$6dbc217b010a975b$var$_getCompassConfig","$6dbc217b010a975b$var$deviceMap","deviceMap","$6dbc217b010a975b$var$serviceMap","serviceMap","module","exports","service","serviceData","ip","device","port","path"],"version":3,"file":"index.js.map"}