{"mappings":";ACAA,yBAAc,GAAG,IAAI,CAAC,KAAK,CAAC,0KAAwM,CAAC,CAAC;;ADAtO;;AEAA,yBAAc,GAAG,IAAI,CAAC,KAAK,CAAC,gJAAoL,CAAC,CAAC;;;AFGlN,SAAS,4BAAM,CAAC,OAAO,EAAE;IACrB,MAAM,WAAW,GAAG,yBAAU,CAAC,OAAO,CAAC,AAAC;IACxC,IAAI,CAAC,WAAW,EACZ,MAAM,KAAK,CAAC,2CAA2C,CAAC,CAAC;IAE7D,MAAM,EAAE,GAAG,yBAAS,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,EAAE,AAAC;IAC7C,OAAO,CAAC,EAAE,WAAW,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,WAAW,CAAC,IAAI,CAAC,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;CACnF;AAED,cAAc,GAAG;YACb,4BAAM;CACT,CAAC","sources":["src/index.js","src/config/device-map.json","src/config/service-map.json"],"sourcesContent":["const deviceMap = require('./config/device-map.json');\nconst serviceMap = require('./config/service-map.json');\n\nfunction getURL(service) {\n    const serviceData = serviceMap[service];\n    if (!serviceData) {\n        throw Error('COMPASS ERROR: Invalid service identifier');\n    }\n    const ip = deviceMap[serviceData.device]?.ip;\n    return `${serviceData.protocol}://${ip}:${serviceData.port}${serviceData.path}`;\n}\n\nmodule.exports = {\n    getURL,\n};","{\n    \"MACBOOK\": {\n        \"ip\": \"192.168.86.100\"\n    },\n    \"ATLAS\": {\n        \"ip\": \"192.168.86.200\"\n    },\n    \"ABICUS\": {\n        \"ip\": \"192.168.86.300\"\n    },\n    \"ASTROLABE\": {\n        \"ip\": \"192.168.86.400\"\n    },\n    \"CODEX\": {\n        \"ip\": \"192.168.86.500\"\n    }\n}","{\n    \"first\": {\n        \"device\": \"ATLAS\",\n        \"protocol\": \"http\",\n        \"port\": \"1000\",\n        \"path\": \"/\"\n    },\n    \"second\": {\n        \"device\": \"ATLAS\",\n        \"protocol\": \"http\",\n        \"port\": \"2000\",\n        \"path\": \"/\"\n    }\n}"],"names":[],"version":3,"file":"index.js.map"}